name: Workflow 2

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: deployment
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Configure Azure credentials for Terraform
        run: |
          echo "TF_VAR_client_id=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_client_secret=${{ secrets.CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "TF_VAR_tenant_id=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_subscription_id=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV
          echo "TF_VAR_resource_group_name=${{ vars.RESOURCE_GROUP_NAME }}" >> $GITHUB_ENV
          echo "TF_VAR_storage_account_name=${{ vars.STORAGE_ACCOUNT_NAME }}" >> $GITHUB_ENV

      - name: Get Storage Account Key
        id: get_storage_key
        run: |
          ACCOUNT_KEY=$(az storage account keys list --resource-group ${{ vars.RESOURCE_GROUP_NAME }} --account-name ${{ vars.STORAGE_ACCOUNT_NAME }} --query '[0].value' -o tsv)
          echo "TF_VAR_arm_access_key=${ACCOUNT_KEY}" >> $GITHUB_ENV

      - name: Break Lease on Terraform State Blob
        run: |
          az storage blob lease break --blob-name terraform.tfstate --container-name terracontainernowsegun --account-name ${{ vars.STORAGE_ACCOUNT_NAME }} --account-key ${ACCOUNT_KEY}
      - name: Terraform Init
        env:
          ARM_ACCESS_KEY: ${{ env.TF_VAR_arm_access_key }}
        run: terraform init -lock=false

      - name: Terraform Plan
        env:
          ARM_ACCESS_KEY: ${{ env.TF_VAR_arm_access_key }}
        run: terraform plan -lock=false

      - name: Terraform Apply (Optional Prompt)
        if: success()
        env:
          ARM_ACCESS_KEY: ${{ env.TF_VAR_arm_access_key }}
        run: terraform apply -auto-approve -lock=false
