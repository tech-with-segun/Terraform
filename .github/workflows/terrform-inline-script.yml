name: Workflow 2

on:
  workflow_dispatch:
  push:
    branches:
      - main

concurrency:
  group: deployment
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Configure Azure credentials for Terraform
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Get Storage Account Key
        id: get_storage_key
        run: |
          ACCOUNT_KEY=$(az storage account keys list --resource-group ${{ vars.RESOURCE_GROUP_NAME }} --account-name ${{ vars.STORAGE_ACCOUNT_NAME }} --query '[0].value' -o tsv)
          echo "ACCOUNT_KEY=${ACCOUNT_KEY}" >> $GITHUB_ENV

      - name: Terraform Init
        env:
          ARM_ACCESS_KEY: ${{ env.ACCOUNT_KEY }}
        run: terraform init

      - name: Terraform Plan
        env:
          ARM_ACCESS_KEY: ${{ env.ACCOUNT_KEY }}
        run: terraform plan -input=false -detailed-exitcode

      - name: Terraform Apply (Optional Prompt)
        if: success()
        env:
          ARM_ACCESS_KEY: ${{ env.ACCOUNT_KEY }}
        run: terraform apply -auto-approve
